name: Build

on:
  pull_request:
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        log-accepted-android-sdk-licenses: false
        cmdline-tools-version: '12266719'
        packages: 'platforms;android-35 build-tools;35.0.0 platform-tools'

    - name: Install NDK
      run: |
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          --channel=3 \
          --install "ndk;29.0.13113456"
        echo "NDK_HOME=$ANDROID_HOME/ndk/29.0.13113456" >> $GITHUB_ENV
        sed -i '18i\
        \
            ndkVersion = "29.0.13113456"' ${{ github.workspace }}/V2rayNG/app/build.gradle.kts

    - name: Restore cached libtun2socks
      id: cache-libtun2socks-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/libs
        key: libtun2socks-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/badvpn/HEAD') }}-${{ hashFiles('.git/modules/libancillary/HEAD') }}

    - name: Build libtun2socks
      if: steps.cache-libtun2socks-restore.outputs.cache-hit != 'true'
      run: |
        bash compile-tun2socks.sh

    - name: Save libtun2socks
      if: steps.cache-libtun2socks-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/libs
        key: libtun2socks-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/badvpn/HEAD') }}-${{ hashFiles('.git/modules/libancillary/HEAD') }}

    - name: Copy libtun2socks
      run: |
        cp -r ${{ github.workspace }}/libs ${{ github.workspace }}/V2rayNG/app

    - name: Fetch AndroidLibXrayLite tag
      run: |
        pushd AndroidLibXrayLite
        CURRENT_TAG=$(git describe --tags --abbrev=0)
        echo "Current tag in this repo: $CURRENT_TAG"
        echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV
        popd

    - name: Download libv2ray
      uses: robinraju/release-downloader@v1
      with:
        repository: '2dust/AndroidLibXrayLite'
        tag: ${{ env.CURRENT_TAG }}
        fileName: 'libv2ray.aar'
        out-file-path: V2rayNG/app/libs/

    - name: Restore cached libhysteria2
      id: cache-libhysteria2-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/hysteria/libs
        key: libhysteria2-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hysteria/HEAD') }}-${{ hashFiles('libhysteria2.sh') }}

    - name: Setup Golang
      if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
      uses: actions/setup-go@v5
      with:
        go-version-file: 'AndroidLibXrayLite/go.mod'
        cache: false

    - name: Build libhysteria2
      if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
      run: |
        bash libhysteria2.sh

    - name: Save libhysteria2
      if: steps.cache-libhysteria2-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/hysteria/libs
        key: libhysteria2-${{ runner.os }}-${{ env.NDK_HOME }}-${{ hashFiles('.git/modules/hysteria/HEAD') }}-${{ hashFiles('libhysteria2.sh') }}

    - name: Copy libhysteria2
      run: |
        cp -r ${{ github.workspace }}/hysteria/libs ${{ github.workspace }}/V2rayNG/app

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

#    - name: Decode Keystore
#      uses: timheuer/base64-to-file@v1
#      id: android_keystore
#      with:
#        fileName: "android_keystore.jks"
#        encodedString: ${{ secrets.APP_KEYSTORE_BASE64 }}

    - name: Build APK
      run: |
        cd ${{ github.workspace }}/V2rayNG
        echo "sdk.dir=${ANDROID_HOME}" > local.properties
        chmod 755 gradlew
        ./gradlew assemble

    - name: arm64
      uses: actions/upload-artifact@v4
      if: github.event.inputs.release_tag == ''
      with:
        name: Arm64
        path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*arm64-v8a.apk

    - name: armeabi-v7a
      uses: actions/upload-artifact@v4
      if: github.event.inputs.release_tag == ''
      with:
        name: Armeabi-v7a
        path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*armeabi-v7a.apk

    - name: x86
      uses: actions/upload-artifact@v4
      if: github.event.inputs.release_tag == ''
      with:
        name: X86
        path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*x86.apk

    - name: x86_64
      uses: actions/upload-artifact@v4
      if: github.event.inputs.release_tag == ''
      with:
        name: X86_64
        path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*x86_64.apk

    - name: universal
      uses: actions/upload-artifact@v4
      if: github.event.inputs.release_tag == ''
      with:
        name: Universal
        path: ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*universal.apk

    - name: Upload to release
      uses: softprops/action-gh-release@v2
      if: github.event.inputs.release_tag != ''
      with:
        files: |
          ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*arm64-v8a.apk
          ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*armeabi-v7a.apk
          ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*x86.apk
          ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*x86_64.apk
          ${{ github.workspace }}/V2rayNG/app/build/outputs/apk/release/*universal.apk
        tag_name: ${{ github.event.inputs.release_tag }}
        make_latest: true
